python vs pypy
文字列の結合、辞書メイン、再帰関数はpython


考えるべきこと
・区間の終端でソート
・足してくのがダメなら全体から引く方法を考える
・dpの添字を増やす


デバッグ
import sys
if len(sys.argv) == 2:
    sys.stdin = open(sys.argv[1])


import sys
import io

_INPUT = """\
5 3 4
oxxox
"""
sys.stdin = io.StringIO(_INPUT)


モジュール関連

・10進数
from decimal import Decimal, ROUND_HALF_UP
Decimal(str(0.6923076923076923)).quantize(Decimal('0.01'), ROUND_HALF_UP)
-> 0.69

・再帰関数上限突破
import sys
sys.setrecursionlimit(10**8)

・メモ化
from functools import lru_cache
@lru_cache

・deque
from collections import deque

・2Dのmax
max(list(map(lambda x: max(x), a)))

・最小値をLogNで取り出せる、-1倍して最大値にも対応
import heapq
heapq.heappush

defaultdict(list)でリストの辞書
from collections import defaultdict

65がA、90がZ
chr(65) = A

UnionFind 頂点数 1 に気を付ける

num = 123
{0:05d}.format(num)
-> 00123

ls = [[1,5],[7,1],[3,2],[4,9]]
std = sorted(ls, key=lambda x: x[1])
-> [[7, 1], [3, 2], [1, 5], [4, 9]]

bisect.bisect(a,x,lo=0,hi=len(a))
- lo,hiを与えることで subset を考慮可能

from collections import defaultdict
a = defaultdict(int)
- {} でなく defaultdict を使うことで a[1] += 1 できる、0で初期化されている

l = ['aaa', 'bbb', 'ccc']
s = ''.join(l)
-> aaabbbccc

i = 12.345
format(i,"010.5f")
-> 0012.34500

1 * pow(3, MOD - 2, MOD) % MOD
- 1/3 の MOD 表現

ケイリーの公式
n 頂点のラベル付き木の総数は n^(n-2)